Input: s = abccc, k = 1
Output: 6
Explaination:
We remove c to get the value as 1^2 + 1^2 + 2^2

Input: s = aabcbcbcabcc, k = 3
Output: 27
Explaination: We remove two 'c' and one 'b'. 
Now we get the value as 3^2 + 3^2 + 3^2.












class Solution{
public:
    int minValue(string s, int k){
        int h[26]={0};
        int n=s.length();
        for(int i=0; i<n; i++){
            h[s[i]-'a']++;
        }
        priority_queue<pair<int, char>>pq;
        for(int i=0; i<26; i++){
            if(h[i]>0)
                pq.push({h[i], char(i+97)});
        }
        while(!pq.empty() &&k>0){
            auto x=pq.top();
            pq.pop();
            x.first--;
            k--;
            if(x.first>0)
                pq.push({x.first, x.second});
        }
        int ans=1,res=0;
        while(!pq.empty()){
            ans=ans*pow(pq.top().first,2);
            res=res+ans;
            pq.pop();
            ans=1;
        }
        return res;
    }
};
