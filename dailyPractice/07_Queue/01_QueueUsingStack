Method 01:- making pop expensive


class Queue {
    stack<int> input, output;
public:
    void enqueue(int x) {
        input.push(x);
    }
    int dequeue() {
        while(input.size()!=1){
            output.push(input.top());
            input.pop();
        }
        int x=input.top();
        input.pop();
        while(!output.empty()){
            input.push(output.top());
            output.pop();
        }
        return x;
    }
};


Method 02: making push Expensive

class Queue {
    stack<int> input, output;
public:
    void enqueue(int x) {
        while(!input.empty()){
            output.push(input.top());
            input.pop();
        }
        input.push(x);
        while(!output.empty()){
            input.push(output.top());
            output.pop();
        }
    }

    int dequeue() {
        int x=input.top();
        input.pop();
        return x;
    }
};
