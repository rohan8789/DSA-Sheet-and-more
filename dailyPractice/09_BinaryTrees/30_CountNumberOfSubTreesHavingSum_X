4 0 1 N 2 0 -2 N -4 -1 -3 N 0 -3
k=-5

output =3

void check(Node* root, int x, int&ans){
    if(root==NULL)return;
    int sum=0;
    if(root->left!=NULL)sum+=root->left->data;
    if(root->right!=NULL)sum+=root->right->data;
    sum+=root->data;
    
    root->data=sum;
    if(sum==x)ans++;
}

void solve(Node* root, int x, int&ans){
    if(root==NULL)return;
    solve(root->left, x, ans);
    solve(root->right, x, ans);
    check(root, x, ans);
}

int countSubtreesWithSumX(Node* root, int X)
{
    if(root==NULL)return 0;
    
    int ans=0;
    solve(root, X, ans);
    return ans;
}
