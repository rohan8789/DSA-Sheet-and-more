Iterative implementation of ProOrder Traversal


Method 01:-
class Solution{
    public:
    vector<int> preOrder(Node* root)
    {
        vector<int>v;
        stack<Node*>s;
        Node* curr=root;
        while(curr!=NULL||s.empty()==false){
            while(curr!=NULL){
                v.push_back(curr->data);
                s.push(curr);
                curr=curr->left;
            }
            curr=s.top();
            s.pop();
            curr=curr->right;
        }
        return v;
    }
};




Method 02:-

class Solution{
    public:
    void find(Node *root, vector<int> &v){
        if(root==NULL)
            return;
        
        stack<Node*> s;
        s.push(root);
        while(!s.empty()){
            Node *top =s.top();
            s.pop();
            v.push_back(top->data);
            if(top->right!=NULL)
                s.push(top->right);
            if(top->left!=NULL)
                s.push(top->left);
        }
    }
    
    vector<int> preOrder(Node* root){
        vector<int> v;
        find(root, v);
        return v;
    }
};
