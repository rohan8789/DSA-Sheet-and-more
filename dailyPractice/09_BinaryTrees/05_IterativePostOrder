Method 01:-

class Solution{
    public:
    vector<int> postOrder(Node* root) {
        stack<Node*>s;
        s.push(root);
        vector<int>v;
        int c=0;
        while(!s.empty()){
            Node* top=s.top();
            s.pop();
            v.push_back(top->data);
            if(top->left){
                s.push(top->left);
            }
            if(top->right){
                s.push(top->right);
            }
        }
        reverse(v.begin(), v.end());
        return v;
    }
};





Method 02:-
class Solution{
    public:
    vector<int> postOrder(Node* root) {
         vector<int> result;
        if (root == NULL)
            return result;

        stack<Node*> s;
        Node* curr = root;
        Node* prev = NULL;

        while (curr != NULL || !s.empty()) {
            while (curr != NULL) {
                s.push(curr);
                curr = curr->left;
            }

            Node* top = s.top();
            if (top->right == NULL || top->right == prev) {
                result.push_back(top->data);
                s.pop();
                prev = top;
            } else {
                curr = top->right;
            }
        }
        return result;
    }
};
