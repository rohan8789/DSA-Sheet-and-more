Given a Binary Tree. Return true if, for every node X in the tree other than the leaves, 
its value is equal to the sum of its left subtree's value and its right subtree's value. Else return false.
also, change the value of the root.data to root->data+l+r;



Method 01:-
class Solution
{
    public:
    int sum=0;
    bool check(Node* root){
        if(root==NULL)return true;
        if(root->left==NULL && root->right==NULL)return true;
        if(root->left!=NULL){
            sum+=root->left->data;
        }
        if(root->right!=NULL){
            sum+=root->right->data;
        }
        return sum==root->data;
    }
    
    bool isSumTree(Node* root){
        if(root==NULL)return true;
        if(root->left==NULL && root->right==NULL)return true;
        if(isSumTree(root->left)&&isSumTree(root->right)){
            if(check(root)){
                root->data+=sum;
                sum=0;
                return true;
            }else{
                return false;
            }
        }
        return false;
    }
};



Method 02:-
class Solution
{
    public:
    void solve(Node* root, bool&ans){
        if(root==NULL)return;
        if(root->left==NULL && root->right==NULL)return;
        solve(root->left,ans);
        solve(root->right,ans);
        int sum=0;
        if(root->left)sum+=root->left->data;
        if(root->right)sum+=root->right->data;
        if(sum!=root->data){
            ans=false;
            return;
        }
        root->data+=sum;
    }
    
    bool isSumTree(Node* root)
    {
        if(root==NULL)return true;
        bool ans=true;
        solve(root, ans);
        return ans;
    }
};
