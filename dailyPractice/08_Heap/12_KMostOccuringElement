Input:
N = 8
arr[] = {3,1,4,4,5,2,6,1}
K = 2
Output: 4
Explanation: Since, 4 and 1 are 2 most
occurring elements in the array with
their frequencies as 2, 2. So total
frequency is 2 + 2 = 4.




Input:
N = 8
arr[] = {3,3,3,4,1,1,6,1}
K = 2
Output: 6
Explanation: Since, 3 and 1 are most
occurring elements in the array with
frequencies 3, 3 respectively. So,
total frequency is 6.






class Solution
{
    public:
    int kMostFrequent(int arr[], int n, int k) 
    { 
    	// Your code here
    	unordered_map<int,int>m;
    	for(int i=0; i<n; i++)m[arr[i]]++;
    	priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>>pq;
    	for(auto i:m){
    	    pq.push({i.second, i.first});
    	    if(pq.size()>k){
    	        pq.pop();
    	    }
    	}
    	int sum=0;
    	while(!pq.empty()){
    	    sum+=pq.top().first;
    	    pq.pop();
    	}
    	return sum;
    } 
};
