Given a string S with repeated characters. The task is to rearrange characters in a string such that no two adjacent characters are the same.


Input : str = "geeksforgeeks"
Output: 1

Input : str = "bbbbb"
Output: 0





class Solution
{
    public:
    string rearrangeString(string str)
    {
        int n=str.length();
        unordered_map<char,int>m;
        for(int i=0; i<n; i++){
            m[str[i]]++;
        }
        priority_queue<pair<int,char>>pq;
        for(auto i:m){
            pq.push({i.second, i.first});
        }
        string s="";
        int ans=0;
        while(pq.size()>0){
            auto x=pq.top();
            pq.pop();
            s.push_back(x.second);
            x.first--;
            if(pq.size()==0){
                if(x.first>0)
                    pq.push({x.first, x.second});
                break;
            }
            auto y=pq.top();
            pq.pop();
            s.push_back(y.second);
            y.first--;
            if(x.first>0){
                pq.push({x.first, x.second});
            }
            if(y.first>0){
                pq.push({y.first, y.second});
            }
        }
        if(!pq.empty()){
            auto x=pq.top();
            if(x.first>0)return "-1";
        }
        return s;
    }   
};





Leetcode
class Solution {
public:
    string reorganizeString(string s) {
        unordered_map<char, int>m;
        for(int i=0; i<s.length(); i++)m[s[i]]++;
        priority_queue<pair<int,char>>pq;
        for(auto i:m){
            pq.push({i.second, i.first});
        }
        string s1="";
        while(pq.size()>1){
            auto p=pq.top();
            pq.pop();
            
            auto q=pq.top();
            pq.pop();
            
            s1=s1+p.second;
            s1=s1+q.second;

            p.first=p.first-1;
            q.first=q.first-1;
            if(p.first>=1){
                pq.push(p);
            }
            if(q.first>=1){
                pq.push(q);
            }
        }
        if(pq.size()==1){
            auto p=pq.top();
            pq.pop();
            if(p.first==1){
                s1=s1+p.second;
            }else{
                return "";
            }
        }
        return s1;
    }
};
