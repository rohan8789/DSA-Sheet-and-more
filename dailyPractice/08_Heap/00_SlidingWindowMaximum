Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]




class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& arr, int k) {
        if(k==1)return arr;
        vector<int> v;
        int n=arr.size();
        priority_queue<pair<int,int>>pq;
        for(int i=0; i<k; i++){
            pq.push({arr[i],i});
        }
        
        v.push_back(pq.top().first);
        for(int i=k; i<n; i++){
            pq.push({arr[i],i});
            if(i-pq.top().second<k){
                v.push_back(pq.top().first);
            }
            else{
                while(i-pq.top().second>=k)pq.pop();
                v.push_back(pq.top().first);
            }
        }
        return v;
        
    }
};
