Input:
N = 6
Arr[] = {6, 8, 4, 5, 2, 3}
Output: 604
Explanation: The minimum sum is formed 
by numbers 358 and 246.



Input:
N = 5
Arr[] = {5, 3, 0, 7, 4}
Output: 82
Explanation: The minimum sum is 
formed by numbers 35 and 047.


5
0 0 0 0 0
output 0




class Solution{   
public:
    string solve(int arr[], int n) {
        if(n==1){
            return to_string(arr[0]);
        }
        else if(n==2){
            return to_string(arr[0]+arr[1]);
        }
        sort(arr,arr+n);
        vector<int>v1,v2;
        for(int i=0; i<n; i++){
            if(i%2==0){
                v1.push_back(arr[i]);
            }else{
                v2.push_back(arr[i]);
            }
        }
        vector<int> ans;
        int x=v1.size()-1, y=v2.size()-1, sum=0, carry=0;
        while(x>=0 || y>=0){
            if(x>=0){
                sum+=v1[x];
                x--;
            }
            if(y>=0){
                sum+=v2[y];
                y--;
            }
            if(carry==1){
                sum+=carry;
            }
            ans.push_back(sum%10);
            carry=sum/10;
            sum=0;
        }
        while(ans[ans.size()-1]==0){
            ans.pop_back();
            if(ans.size()==0){
                return "0";
            }
        }
        reverse(ans.begin(), ans.end());
        string res="";
        for(int i=0; i<ans.size(); i++){
            res=res+to_string(ans[i]);
        }
        return res;
    }
};
