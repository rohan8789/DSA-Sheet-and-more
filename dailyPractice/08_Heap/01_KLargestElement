Input:
N = 5, K = 2
Arr[] = {12, 5, 787, 1, 23}
Output: 787 23


Input:
N = 7, K = 3
Arr[] = {1, 23, 12, 9, 30, 2, 50}
Output: 50 30 23




class Solution{
public:	
	vector<int> kLargest(int arr[], int n, int k) {
	    vector<int>v;
	    priority_queue<int,vector<int>,greater<int>>pq;
	    for(int i=0; i<k; i++){
	        pq.push(arr[i]);
	    }
	    for(int i=k; i<n; i++){
	        if(pq.top()<arr[i]){
	            pq.pop();
	            pq.push(arr[i]);
	        }
	    }
	    while(!pq.empty()){
	        v.push_back(pq.top());
	        pq.pop();
	    }
	    reverse(v.begin(), v.end());
	    return v;
	}
};
