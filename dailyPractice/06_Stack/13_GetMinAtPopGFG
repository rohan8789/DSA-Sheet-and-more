N = 7
A = {1 6 43 1 2 0 5}
Output: 
0 0 1 1 1 1 1


stack<int> _push(int arr[],int n)
{
    stack<int> s;
    s.push(arr[0]);
    int m=INT_MAX;
    for(int i=1; i<n; i++){
        if(s.top()>=arr[i]){
            s.push(arr[i]);
        }else{
            s.push(s.top());
        }
    }
    return s;
}

void _getMinAtPop(stack<int>s)
{
    while(!s.empty()){
        cout<<s.top()<<" ";
        s.pop();
    }
}










stack<int> _push(int arr[],int n)
{
    stack<int> s1,s2;
    int m=INT_MAX;
    for(int i=0; i<n; i++){
        s1.push(arr[i]);
        m=min(m,arr[i]);
        s2.push(m);
    }
    return s2;
}

void _getMinAtPop(stack<int>s)
{
    while(!s.empty()){
        cout<<s.top()<<" ";
        s.pop();
    }
}
