Idea is simple. store elements of first stack on lhs of array and elements of second stack on rhs of array





class twoStacks
{
    int *arr;
    int size;
    int top1, top2;
    public:
    
    twoStacks(int n=100)
    {
        size = n; 
        arr = new int[n]; 
        top1 = -1; 
        top2 = size;
    }
    
    void push1(int x)
    {
        if(top1<size){
            top1=top1+1;
            arr[top1]=x;
        }
    }
    
    void push2(int x)
    {
        if(top2>=0){
            top2=top2-1;
            arr[top2]=x;
        }
    }
    
    int pop1()
    {
        if(top1==-1)return -1;
        int x=arr[top1];
        top1=top1-1;
        return x;
    }
    
    int pop2()
    {
       if(top2==size)return -1;
       int x=arr[top2];
       top2=top2+1;
       return x;
    }
};
