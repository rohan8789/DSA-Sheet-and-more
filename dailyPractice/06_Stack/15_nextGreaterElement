Input: 
N = 4, arr[] = [1 3 2 4]
Output:
3 4 4 -1


Input: 
N = 5, arr[] [6 8 0 1 3]
Output:
8 -1 1 3 -1


4
7 8 1 4
Output: 
8 -1 4 -1





class Solution
{
    public:
    typedef long long ll;
    vector<ll> nextLargerElement(vector<ll> arr, int n){
        vector<ll>v;
        v.push_back(-1);
        stack<ll>st;
        st.push(arr[n-1]);
        for(int i=n-2; i>=0; --i){
            if(st.top()>arr[i]){
                v.push_back(st.top());
                st.push(arr[i]);
            }else{
                while(st.top()<=arr[i]&&st.size()>=1){
                    st.pop();
                    if(st.size()==0)break;
                }
                if(st.size()==0){
                    v.push_back(-1);
                }else{
                    v.push_back(st.top());
                }
                st.push(arr[i]);
            }
        }
        reverse(v.begin(),v.end());
        return v;
    }
};








class Solution
{
    public:
    typedef long long ll;
    vector<ll> nextLargerElement(vector<ll> arr, int n){
        stack<ll>s;
        vector<ll>v;
        s.push(n-1);
        v.push_back(-1);
        for(int i=n-2; i>=0; --i){
            if(arr[s.top()]>arr[i]){
                v.push_back(arr[s.top()]);
            }else{
                while(!s.empty() && arr[s.top()]<=arr[i]){
                    s.pop();
                }
                if(s.empty()){
                    v.push_back(-1);
                }else{
                    v.push_back(arr[s.top()]);
                }
            }
            s.push(i);
        }
        reverse(v.begin(),v.end());
        return v;
        
    }
};
