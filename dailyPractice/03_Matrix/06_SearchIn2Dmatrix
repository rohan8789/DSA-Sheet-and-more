You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int r=matrix.size();
        int c=matrix[0].size();
        if(r==1&&c==1){
            if(matrix[0][0]==target)return true;
            else return false;
        }
        int l=0;
        int h=r*c-1;
        while(l<=h){
            int m=(l+h)/2;
            int x=m/c;
            int y=m%c;
            if(matrix[x][y]==target){
                return true;
            }else if(matrix[x][y]>target){
                h=m-1;
            }else{
                l=m+1;
            }
        }
        return false;
    }
};










n = 3, m = 3, x = 62
matrix[][] = {{ 3, 30, 38},
              {36, 43, 60},
              {40, 51, 69}}
Output: 0
Explanation:
62 is not present in the matrix, 
so output is 0.


class Solution
{
    public:
    bool search(vector<vector<int> > matrix, int n, int m, int x) 
    {
        int l=0, h=m-1;
        while(l<n && h>=0){
            if(matrix[l][h]<x){
                l=l+1;
            }else if(matrix[l][h]>x){
                h=h-1;
            }else{
                return 1;
            }
        }
        return 0;
    }
};
