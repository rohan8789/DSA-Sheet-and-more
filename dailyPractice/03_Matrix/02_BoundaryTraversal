{   
    public:
    vector<int> boundaryTraversal(vector<vector<int> > matrix, int n, int m) 
    {
        vector<int>v;
        if(n==1){
            for(int i=0; i<m; i++){
                v.push_back(matrix[0][i]);
            }
            return v;
        }
        if(m==1){
            for(int i=0; i<n; i++){
                v.push_back(matrix[i][0]);
            }
            return v;
        }
        for(int i=0; i<m; i++){
            v.push_back(matrix[0][i]);
        }
        for(int i=1; i<n; i++){
            v.push_back(matrix[i][m-1]);
        }
        for(int i=m-2; i>=0; --i){
            v.push_back(matrix[n-1][i]);
        }
        for(int i=n-2; i>=1; --i){
            v.push_back(matrix[i][0]);
        }
        return v;
    }
};
