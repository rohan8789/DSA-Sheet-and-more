class Solution
{   
    public: 
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        vector<int>v;
        if(r==1){
            for(int i=0; i<c; i++){
                v.push_back(matrix[0][i]);
            }
            return v;
        }
        else if(c==1){
            for(int i=0; i<r; i++){
                v.push_back(matrix[i][0]);
            }
            return v;
        }
        
        for(int i=0; i<r; i++){
            for(int j=i; j<c-i; j++){
                cout<<i<<j<<" ";
                v.push_back(matrix[i][j]);
            }
            for(int j=i+1; j<r-i; j++){
                cout<<j<<c-1-i<<" ";
                v.push_back(matrix[j][c-1-i]);
            }
            for(int j=c-2-i; j>=i; j--){
                cout<<r-1-i<<j<<" ";
                v.push_back(matrix[r-1-i][j]);
            }
            for(int j=r-2-i; j>i; --j){
                cout<<j<<i<<" ";
                v.push_back(matrix[j][i]);
            }
        }
        return v;
    }
};
