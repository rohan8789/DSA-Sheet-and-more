//This is for union
sort(a,a+n);
sort(b,b+m);
int i=0,j=0,k=0;
vector<int>v;
while(i<n&&j<m){
   while(a[i]==a[i+1]){
      i++;
   }
   while(b[j]==b[j+1]){
      j++;
   }
   if(a[i]<b[j]){
      v.push_back(a[i++]);
   }
   else if(a[i]>b[j]){
      v.push_back(b[j++]);
   }else{
      while(a[i]==b[j]){
         j++;
      }
      v.push_back(a[i++]);
   }
}
while(i<n){
   while(a[i]==a[i+1]){
      i++;
   }
   v.push_back(a[i++]);
}
while(j<m){
   while(b[j]==b[j+1]){
      j++;
   }
   v.push_back(b[j++]);
}
return v.size();




//for intersection
int i=0,j=0,c=0;
sort(arr, arr+n);
sort(brr,brr+m);
while(i<n && j<m){
   while(arr[i]==arr[i+1]&&i+1<n)i++;
   while(brr[j]==brr[j+1]&&j+1<m)j++;
   if(arr[i]<brr[j])i++;
   else if(arr[i]>brr[j])j++;
   else{ i++; j++; c++;}
}
return c;
