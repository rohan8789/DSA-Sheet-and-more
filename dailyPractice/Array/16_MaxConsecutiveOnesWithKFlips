Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
Example 2:

Input: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3
Output: 10
Explanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.



//variable size Sliding Window problem
class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n=nums.size();
        int c=0, j=0,d=0,ans=INT_MIN;
        for(int i=0; i<n; i++){
            if(nums[i]==0){
                if(d==k){
                    ans=max(ans, c);
                    while(nums[j]!=0){
                        j++;
                        f=1;
                        c--;
                    }
                    c=c-1;
                    j=j+1;
                }
                if(d<k){
                    d++;
                }
            }
            c++;
        }
        ans=max(ans,c);
        return ans;
    }
};
