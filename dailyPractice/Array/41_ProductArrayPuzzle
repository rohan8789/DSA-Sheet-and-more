Input:
n = 5
nums[] = {10, 3, 5, 6, 2}
Output:
180 600 360 300 900
Explanation: 
For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900.


class Solution{
  public:
    typedef long long int ll;
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
        vector<ll>v;
        ll p=1;
        int f=0,c=0;
        for(int i=0; i<n; i++){
            if(nums[i]==0){
                c++;
            }
            if(nums[i]!=0)p=p*nums[i];
        }
        for(int i=0; i<n; i++){
            if(c>0 && c<2){
                if(nums[i]!=0){
                    v.push_back(0);
                }else{
                    v.push_back(p);
                }
            }else if(c>=2){
                v.push_back(0);
            }
            else{
                ll x=p/nums[i];
                v.push_back(x);
            }
        }
        return v;
    }
};
