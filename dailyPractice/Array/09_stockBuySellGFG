class Solution{
public:
    //Function to find the days of buying and selling stock for max profit.
    vector<vector<int> > stockBuySell(vector<int> arr, int n){
        // code here
        vector<vector<int>>v;
        int start=0,end=0,s=0,f=0;
        for(int i=0; i<n-1; i++){
            if(arr[i]<=arr[i+1]){
                s=start;
                end=i+1;
                f=0;
            }else{
                if(s<end&&f==0){
                    // cout<<s<<" "<<end<<endl;
                    v.push_back({s,end});
                }
                start=i+1;
                f=1;
            }
        }
        if(s<end&&f==0){
        // cout<<s<<" "<<end<<endl;
        v.push_back({s,end});
        }
        return v;
    }
};



class Solution{
public:
    vector<vector<int> > stockBuySell(vector<int> A, int n){
        vector<vector<int>>v;
        int start=0,end=0,s=0;
        for(int i=1; i<n; i++){
            if(A[i-1]<=A[i]){
                s=start;
                end=i;
            }else{
                if(start<end)
                    v.push_back({start, end});
                start=i;
            }
        }
        if(start<end)v.push_back({start, end});
        
        return v;
    }
};




//Solved someday later

