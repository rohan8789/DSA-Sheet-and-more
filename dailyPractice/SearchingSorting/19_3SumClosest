class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int n=nums.size();
        int res=INT_MAX;
        int ans=0;
        sort(nums.begin(), nums.end());
        for(int i=0; i<n-2; i++){
            int l=i+1; 
            int h=n-1;
            while(l<h){
                int s=nums[i]+nums[l]+nums[h];
                int x=abs(s-target);
               // cout<<nums[i]<<" "<<nums[l]<<" "<<nums[h]<<endl;
                if(s==target){
                    return s;
                }else if(s>target){
                    h--;
                }else{
                    l++;
                }
                if(x<res){
                    res=x;
                    ans=s;
                }
            }
        }
        return ans;
    }
};





















class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int n=nums.size(), ans=INT_MAX, minAns=0;
        for(int i=0; i<n-2; i++){
            int l=i+1; 
            int h=n-1;
            while(l<h){
                int s=nums[i]+nums[l]+nums[h];
                int res=abs(s-target);
                if(s==target){
                    return s;
                }else if(s<target){
                    if(ans>res){
                        ans=res;
                        minAns=s;
                    }
                    l++;
                }else{
                    if(ans>res){
                        ans=res;
                        minAns=s;
                    }
                    h--;
                }
            }
        }
        return minAns;
    }
};
