//Same as minimum page allocation problem


int solve(vector<int> v, int m, int k){
    int n=v.size();
    long long s=0;
    int c=1;
    for(int i=0; i<n; i++){
        s=s+v[i];
        if(s>m){
            c++;
            if(c>k)return c;
            s=v[i];
        }
    }
    return c;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    int l=boards[0], ans=-1;
    long long h=0; 
    int n=boards.size();
    for(int i=0; i<n; i++){
        h=h+boards[i];
        l=max(l,boards[i]);
    }
    while(l<=h){
        int m=(l+h)/2;
        if(solve(boards, m, k)>k){
            l=m+1;
        }else{
            ans=m;
            h=m-1;
        }
    }
    return ans;
}
