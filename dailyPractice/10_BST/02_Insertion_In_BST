Method 01:- Recursive
Node* insert(Node* root, int key) {
    if(root==NULL){
        root=new Node(key);
        return root;
    }
    if(key>root->data){
        root->right=insert(root->right,key);
    }else if(key<root->data){
        root->left=insert(root->left,key);
    }else{
        return root;
    }
}

Method 02:- Iterative, More Space optimized
Node* insert(Node* root, int key) {
    Node* parent=root, *curr=NULL;
    while(parent!=NULL){
        curr=parent;
        if(parent->data<key){
            parent=parent->right;
        }else if(parent->data>key){
            parent=parent->left;
        }else{
            return root;
        }
    }
    if(curr->data>key){
        curr->left=new Node(key);
    }else{
        curr->right=new Node(key);
    }
    return root;
}
