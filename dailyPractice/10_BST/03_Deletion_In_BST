Deleting leaf or a node whith one child is easier. Think to delete element with leaf.





Node* solve(Node* root,int x){
    if(root==NULL)return NULL;
    if(root->data==x){
        if(root->left==NULL && root->right==NULL){
            delete root;
            return NULL;
        }else if(root->right==NULL){
            Node* a=root->left;
            root->left=NULL;
            delete(root);
            return a;
        }else if(root->left==NULL){
            Node* a=root->right;
            root->right=NULL;
            delete (root);
            return a;
        }else{
            //find leftMost leaf of the right child.--->>Leftmost successor
            //copy successor data to roo data, and recursively call for right
            Node* curr=root;
            curr=curr->right;
            while(curr!=NULL && curr->left!=NULL){
                curr=curr->left;
            }
            root->data=curr->data;
            curr->left=NULL;
            root->right=solve(root->right, curr->data);
            return root;
        }
    }else if(root->data>x){
        root->left=solve(root->left,x);
    }else{
        root->right=solve(root->right,x);
    }
    return root;
}

Node *deleteNode(Node *root, int X) {
    
    if(root==NULL)return root;
    Node* ans=solve(root,X);
    return ans;
}
